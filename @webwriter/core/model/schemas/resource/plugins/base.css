html {
  background: var(--sl-color-gray-100);
  overflow-y: scroll;
  overflow-x: hidden;
  height: 100%;
  --sl-color-danger-300: #fca5a5;
  --sl-color-primary-400: #38bdf8;
  --scrollbar-width: 16px;
  pointer-events: none;
  user-select: none;
  -webkit-user-select: none;
  padding-left: var(--scrollbar-width);
}

html.sl-scroll-lock {
  scrollbar-gutter: auto !important;
  --sl-scroll-lock-size: var(--scrollbar-width) !important;
}

html::-webkit-scrollbar {
  width: var(--scrollbar-width);
}

html::-webkit-scrollbar-thumb {
  background-color: #b0b0b0;
  background-clip: padding-box;
  border-bottom: 6px solid transparent;
  border-top: 6px solid transparent;
}

html::-webkit-scrollbar-track {
  background-color: transparent;
}
/* Buttons */
html::-webkit-scrollbar-button:single-button {
  background-color: transparent;
  display: block;
  border-style: solid;
  height: 16px;
  width: 16px;
  padding: 2px;
}
/* Up */
html::-webkit-scrollbar-button:single-button:vertical:decrement {
  border-width: 0 8px 8px 8px;
  border-color: transparent transparent var(--sl-color-gray-600) transparent;
}

html::-webkit-scrollbar-button:single-button:vertical:decrement:hover {
  border-color: transparent transparent var(--sl-color-gray-800) transparent;
}

html::-webkit-scrollbar-button:single-button:vertical:decrement:disabled {
  border-color: transparent transparent var(--sl-color-gray-400) transparent;
}

/* Down */
html::-webkit-scrollbar-button:single-button:vertical:increment {
  border-width: 8px 8px 0 8px;
  border-color: var(--sl-color-gray-600) transparent transparent transparent;
}

html::-webkit-scrollbar-button:vertical:single-button:increment:hover {
  border-color: var(--sl-color-gray-800) transparent transparent transparent;
}

html::-webkit-scrollbar-button:vertical:single-button:increment:disabled {
  border-color: var(--sl-color-gray-400) transparent transparent transparent;
}

* {
  outline: none;
}

html.ww-all-selected:not(.ww-empty) {
  & body {
    border: 1px solid var(--sl-color-primary-400);

    &::after {
      content: "";
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: var(--sl-color-primary-400);
      opacity: 10%;
      pointer-events: none;
    }
  }

  & ::selection {
    background: transparent !important;
    caret-color: transparent !important;
  }
}

a:not([href]) {
  text-decoration: underline;
  color: #0000ee;
}

body {
  display: block;
  margin: 0;
  margin-left: auto;
  margin-right: auto;
  min-height: 100vh;
  max-width: 840px;
  box-sizing: border-box;
  caret-color: currentColor;
}

@media screen and (min-width: 1130px) and (max-width: 1380px) {
  body {
    margin-left: 0;
  }
}

figure:hover {
  position: relative;
}

figure:hover::after {
  content: "";
  position: absolute;
  right: -20px;
  top: 0;
  width: 20px;
  border-right: 4px solid var(--sl-color-primary-400);
  height: 100%;
  border-radius: 4px;
}

figure.ProseMirror-selectednode {
  position: relative;
}

figure.ProseMirror-selectednode::before {
  position: absolute;
  content: "";
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  background: var(--sl-color-primary-400);
  opacity: 0.5;
  z-index: 1;
}

.slot-content {
  cursor: text;
}

.ProseMirror {
  pointer-events: all;
  user-select: initial;
  -webkit-user-select: initial;
  position: relative;
  outline: none;
  display: block;
  white-space: normal !important;
  background: white;
  border: 1px solid var(--sl-color-gray-300);
  min-height: 100%;
  box-sizing: border-box;
}

[data-ww-editing^="unknown"]:not(:defined) {
  border: 2px solid var(--sl-color-warning-600);
  padding: 4px;
  color: var(--sl-color-warning-600);
  text-align: center;
}

[data-ww-editing^="unknown"]:not(:defined)::before {
  display: inline-block;
  content: "⚠  Unknown element <" attr(data-ww-tagname) ">";
  margin-right: 1ch;
  font-size: 1.25rem;
}

.ww-widget {
  --ww-action-opacity: 1;
  position: relative;
  display: block;
}

html:is(.ww-key-ctrl, .ww-key-meta) body * {
  cursor: pointer;
}

.ProseMirror > :not(.ProseMirror-widget) {
  position: relative;
}

/*
.ProseMirror > :not(.ProseMirror-widget)::after {
  content: "";
  position: absolute;
  right: -18px;
  top: 0;
  border-right: 6px solid transparent;
  background: none;
  height: 100%;
  cursor: pointer;
  width: 20px;
}*/

.ProseMirror
  *:not(
    :is(
        a,
        abbr,
        b,
        bdi,
        bdo,
        cite,
        code,
        data,
        del,
        dfn,
        em,
        i,
        ins,
        kbd,
        q,
        ruby,
        s,
        samp,
        small,
        span,
        strong,
        sub,
        sup,
        time,
        u,
        var,
        mtext,
        annotation,
        annotation-xml,
        maction,
        merror,
        mfrac,
        mi,
        mmultiscripts,
        mn,
        mo,
        mover,
        mpadded,
        mphantom,
        mprescripts,
        mroot,
        mrow,
        ms,
        mspace,
        msqrt,
        mstyle,
        msub,
        msubsup,
        msup,
        mtable,
        mtd,
        mtr,
        munder,
        munderover,
        none,
        semantics,
        comment-
      )
  ):hover {
  outline: 1px dotted var(--sl-color-gray-400);
  outline-offset: 2px;
}

.ProseMirror .ProseMirror-selectednode {
  outline-offset: 2px;
}

.ProseMirror *:is(:not(.ww-inline), math).ww-selected:hover {
  outline: 2px dotted var(--sl-color-primary-400);
  outline-offset: 2px;
}

.ww-selected {
  outline: 2px solid var(--sl-color-primary-400);
  outline-offset: 2px;
  z-index: 2147483646;
}

/*
.ProseMirror > *:hover::after {
  border-color: var(--sl-color-gray-100);
}

.ProseMirror > *:is([data-ww-selected], :has([data-ww-selected]))::after {
  border-color: var(--sl-color-gray-200);
}

.ProseMirror > *:is([data-ww-selected]:hover, :has([data-ww-selected]:hover))::after {
  border-color: var(--sl-color-gray-300);
}

.ww-widget[editable][data-ww-deleting]::after {
  border-color: var(--sl-color-danger-400);
}*/

:is(
    .ww-copying,
    .ww-cutting,
    .ww-deleting,
    .ww-commenting,
    html:is(.ww-key-ctrl, .ww-key-meta) body *
  ):not(html):not(tr)::before {
  content: "";
  position: absolute;
  right: -20px;
  top: 0;
  left: 0px;
  opacity: 0.25;
  width: 100%;
  height: 100%;
}

html:is(.ww-key-ctrl, .ww-key-meta) body * {
  pointer-events: none;
}

html:is(.ww-key-ctrl, .ww-key-meta) body *::before {
  pointer-events: all;
  z-index: unset;
}

.ww-copying {
  outline-color: var(--sl-color-primary-700) !important;

  &::before {
    background: var(--sl-color-primary-400) !important;
  }
}

.ww-cutting {
  outline-color: var(--sl-color-warning-500) !important;

  &::before {
    background: var(--sl-color-warning-400) !important;
  }
}

.ww-commenting {
  outline-color: hsla(50, 100%, 50%, 100%) !important;

  &::before {
    background: hsla(50, 100%, 50%, 60%) !important;
  }
}

.ww-deleting {
  outline-color: var(--sl-color-danger-600) !important;

  &::before {
    background: var(--sl-color-danger-400) !important;
  }
}

.ww-selected-inner::before {
  content: "";
  position: absolute;
  right: -20px;
  top: 0;
  left: 0px;
  background: var(--sl-color-primary-400);
  opacity: 0.25;
  z-index: 2147483647;
  width: 100%;
  height: 100%;
}

.ww-widget#ww_preview {
  position: relative;
  display: block;
  user-select: none;
  -webkit-user-select: none;
  outline: 4px dashed var(--sl-color-primary-400);
}

main:not(:focus-within) .ww-widget.ww-selected {
  outline-color: lightgray;
}

/*
body > .ww-widget::after {
  --ww-widget-highlight-color: transparent;
  content: "";
  position: absolute;
  left: calc(100%);
  top: 1px;
  width: 20px;
  background: linear-gradient(
    to right,
    transparent 0%,
    transparent 40%,
    var(--ww-widget-highlight-color) 40%,
    var(--ww-widget-highlight-color) 60%,
    transparent 60%,
    transparent 100%
  );
  height: calc(100% - 2px);
  cursor: pointer;
  box-sizing: border-box;
}
  */

.ww-widget.ww-selected::after {
  --ww-widget-highlight-color: var(--sl-color-primary-400);
}

.ww-widget.ww-deleting::after {
  --ww-widget-highlight-color: var(--sl-color-danger-400);
}

.ww-widget:is(.ww-cutting, .ww-copying)::after {
  --ww-widget-highlight-color: var(--sl-color-warning-400);
}

.ww-widget:hover::after {
  --ww-widget-highlight-color: var(--sl-color-primary-200);
}

.ww-widget.ww-selected:hover::after {
  --ww-widget-highlight-color: var(--sl-color-primary-500);
}

.ww-widget:focus-within {
  --ww-action-opacity: 1;
}

.ww-widget::part(options) {
  opacity: var(--ww-action-opacity);
}

.ProseMirror::before {
  color: darkgray;
  position: absolute;
  content: "⠀";
  pointer-events: none;
  user-select: none;
  -webkit-user-select: none;
}

[data-empty] {
  position: relative;
}

:is(h1, h2, h3, h4, h5, h6):is(:empty, :has(.ProseMirror-trailingBreak:only-child))::before {
  content: attr(data-placeholder);
  position: absolute;
  top: 0;
  left: 2px;
  color: var(--sl-color-gray-400);
  pointer-events: none;
  user-select: none;
  -webkit-user-select: none;
}

.ProseMirror th,
.ProseMirror td {
  min-width: 1em;
  border: 1px solid var(--sl-color-gray-600);
  padding: 3px 5px;
  transition: width 0.1s;
}

.ProseMirror .tableWrapper {
  margin: 1em 0;
}

.ProseMirror th {
  font-weight: bold;
  text-align: left;
}

.grammar-mark {
  border-bottom: red 2px solid;
}

.grammar-mark:hover {
  background-color: rgba(255, 0, 0, 0.2);
  transition: background-color 0.1s ease;
}

.grammar-insert {
  color: dimgrey;
  border-bottom: rgb(255, 234, 0) 2px solid;
}

.grammar-insert:hover {
  background-color: rgba(242, 255, 0, 0.288);
  transition: background-color 0.1s ease;
}

body > .ProseMirror-gapcursor:first-child {
  margin-bottom: 0;
}

table, tbody, tr {
  overflow: visible !important;
}

table tr {
  overflow: visible;
}

@keyframes blink {
  50% {
    opacity: 0.0;
  }
}
table :is(thead, tbody, tfoot) > tr:has(+ .ProseMirror-gapcursor) {
  anchor-name: --table-row;
} 

table :is(thead, tbody, tfoot) > .ProseMirror-gapcursor {
  display: inline;
  position: absolute;
  top: anchor(--table-row top);
  right: anchor(--table-row right);
  height: -1px;
  position-anchor: --table-row;

  &::after {
    display: block;
    content: "";
    height: calc(1lh + 6px);
    width: 2px;
    background: currentColor;
    z-index: 10;
    animation: blink 1s step-end 0s infinite;
    clip-path: unset;
    margin-left: 2px;
    margin-top: 2px;
  }
}

.ProseMirror-gapcursor + tr td {
  border-top: none !important;
}

table .selectedCell {
  background: var(--sl-color-primary-200) !important;
}

tr {
  container-type: inline-size;
  container-name: table-row;
}

td:is(:empty, :has(.ProseMirror-trailingBreak)) {
  height: 1lh;
  aspect-ratio: 1;
}

thead, tbody, tfoot {
  border-left: none !important;
}

::selection {
  background: var(--sl-color-primary-200) !important;
  z-index: 2147483647;
}

iframe.ww-selected ::selection {
  background: transparent !important;
}

:is(picture, img, math:is(:empty,
:has(mtext:only-child br:only-child))) ::selection {
  background: transparent !important;
}

html.ww-cutting ::selection {
  background: var(--sl-color-warning-300) !important;
}


html.ww-deleting ::selection {
  background: var(--sl-color-danger-300) !important;
}

html.ww-commenting ::selection {
  background: hsla(50, 100%, 50%, 60%) !important;
}


abbr {
  text-decoration: underline 1px dotted currentColor;
}

:not(:defined):not([data-ww-editing^="unknown"]):not(comment-)::after {
  content: "⚠ Element not defined" !important;
  color: goldenrod !important;
}

:not(:defined):not(comment-) {
  display: block;
  min-height: 1.75rem;
  cursor: pointer;
  caret-color: transparent !important;
}

:is(:empty, :has(.ProseMirror-trailingBreak)) {
  position: relative;
}

:is(:empty, :has(> :only-of-type.ProseMirror-trailingBreak)):not(
    .ProseMirror-widget
  ):after {
  font: inherit;
  text-align: inherit;
  content: var(--ww-placeholder);
  width: 100%;
  position: absolute;
  left: 0;
  top: 0;
  color: darkgray;
  pointer-events: none;
  user-select: none;
  -webkit-user-select: none;
}

.ProseMirror-gapcursor::after {
  z-index: 2147483647;
}

iframe:not(:is([src], [src=""])),
picture:not(:has(img[src]:not([src=""]))),
video:not([src]):not(:has(track[src])) {
  background: lightgray;
  position: relative;
}

:is(picture, iframe)::after {
  position: absolute;
  top: 0;
  left: 0;
  left: calc(50% - 32px);
  top: calc(50% - 32px);
  width: 64px;
  height: 64px;
}

picture {
  cursor: pointer;
}

svg {
  cursor: pointer;
}

svg * {
  outline: none !important;
}

picture:not(:has(img[src]:not([src=""])))::after {
  content: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-photo" width="64" height="64" viewBox="0 0 24 24" stroke-width="2" stroke="darkgray" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M15 8h.01" /><path d="M3 6a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v12a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3v-12z" /><path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l5 5" /><path d="M14 14l1 -1c.928 -.893 2.072 -.893 3 0l3 3" /></svg>');
}

picture:not(:has(img[src]:not([src=""]))) {
  aspect-ratio: 16/9;
}

video:not([controls]) {
  display: unset !important;
}

math {
  cursor: pointer;
  & * {
    user-select: none;
    -webkit-user-select: none;
    pointer-events: none;
  }
}

math.ww-selected-inner {
  background: var(--sl-color-primary-200);
}

math.ww-selected ::selection {
  background: transparent !important;
}

math:empty,
math:has(> mtext:only-child br:only-child) {
  display: inline-block;
  background: lightgray;
  cursor: pointer;
  height: 0.75lh;
  aspect-ratio: 1/1;
  padding: 2px;
  line-height: inherit;
  margin: 0 2px;
  position: relative;
  vertical-align: middle;
  & mtext:is(:empty, :has(.ProseMirror-trailingBreak:only-child)) {
    height: 100%;
  }
}

math:empty::after,
math:has(> mtext:only-child br:only-child)::after {
  position: absolute;
  top: 0;
  left: 0;
  display: inline-block;
  width: 100%;
  height: 100%;
  content: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-math" width="100%" height="100%" viewBox="0 0 24 24" stroke-width="2" stroke="darkgray" fill="none" stroke-linecap="round" stroke-linejoin="round" part="svg"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M19 5h-7l-4 14l-3 -6h-2"></path><path d="M14 13l6 6"></path><path d="M14 19l6 -6"></path></svg>') !important;
}

svg:empty {
  background: lightgray;
}

svg:empty::after {
  position: absolute;
  top: 0;
  left: 0;
  display: inline-block;
  width: 100%;
  height: 100%;
  content: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="darkgray" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-vector"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M3 3m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"/><path d="M17 3m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"/><path d="M17 17m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"/><path d="M3 17m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"/><path d="M5 7l0 10"/><path d="M19 7l0 10"/><path d="M7 5l10 0"/><path d="M7 19l10 0"/></svg>');
}

table:empty {
  display: block;
  background: lightgray;
  width: 100%;
  min-height: 100px;
}

table:empty::after {
  position: absolute;
  top: 0;
  left: 0;
  display: inline-block;
  width: 100%;
  height: 100%;
  content: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="darkgray" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-vector"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M3 3m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"/><path d="M17 3m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"/><path d="M17 17m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"/><path d="M3 17m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v2a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"/><path d="M5 7l0 10"/><path d="M19 7l0 10"/><path d="M7 5l10 0"/><path d="M7 19l10 0"/></svg>');
}

.ProseMirror-gapcursor::after {
  width: 1em;
  height: 1em;
  clip-path: polygon(
    26% 50%,
    0 16%,
    3% 13%,
    30% 48%,
    100% 48%,
    100% 52%,
    30% 52%,
    3% 87%,
    0 84%
  );
  margin-left: -0.4em;
  margin-top: -0.4em;
  background: currentColor;
}

/*
body:not(:has(:not(.ProseMirror-gapcursor))) .ProseMirror-gapcursor::after {
  clip-path: none;
  width: 2px;
  height: 1.25em;
  margin: 0;
  margin-top: 20px;
}*/

.ProseMirror-widget {
  margin-block: 0;
}

.ProseMirror-hideselection .ww-widget:not(:has(.ProseMirror-gapcursor)) {
  caret-color: initial;
}
.ProseMirror-hideselection .ProseMirror-gapcursor {
  display: block;
}

body:has(.ProseMirror-gapcursor) :is(*::selection, *::-moz-selection) {
  display: none !important;
}

html:has(.ww-fullscreen) {
  scrollbar-gutter: unset;
  overflow: hidden;
}

body:has(.ww-fullscreen) {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  max-width: unset;
  background: black;
}

.ww-fullscreen {
  position: fixed;
  width: 100%;
  height: 100%;
  outline: none !important;
  margin: 0;
  box-sizing: border-box;
  overflow-y: auto;
  scrollbar-width: thin;

  &::after {
    display: none;
  }
}

body:has(.ww-fullscreen) > :not(.ww-fullscreen) {
  display: none !important;
}

.ww-widget:is(:fullscreen, .ww-fullscreen)::part(options) {
  display: none !important;
}

comment- {
  background: hsla(50, 100%, 50%, 60%);
  border-radius: 2px;
}

comment-::selection {
  background: hsla(50, 100%, 50%, 60%) !important;
}

[data-ww-comment-0]:not(.ww-selected) {
  outline: 1px solid hsla(50, 100%, 50%, 60%);
}

[data-ww-comment-0].ww-selected {
  outline-color: hsla(50, 100%, 50%, 100%);
}

[data-ww-comment-0].ww-selected:hover {
  outline: 2px dotted hsla(50, 100%, 50%, 100%) !important;
}


@media only screen and (min-width: 1130px) {
  .ww-widget::part(options) {
    position: fixed;
    width: var(--ww-toolbox-action-width);
    max-width: 400px;
    height: var(--ww-toolbox-action-height);
    left: var(--ww-toolbox-action-x);
    top: var(--ww-toolbox-action-y);
    overflow-y: auto;
    scrollbar-width: thin;
    scrollbar-gutter: stable;
    padding-top: 5px;
    user-select: none;
    -webkit-user-select: none;
  }

  .ww-widget:not(.ww-selected):not(.ww-selected-text-within:not(:has(.ww-widget.ww-selected-text-within)))::part(options) {
    display: none;
  }
}

@media print {
  html {
    overflow: visible;
    background: none;
    border: none;
  }

  body {
    width: 100%;
    margin: 0 !important;
    background: none;
    border: none;
  }

  .ProseMirror {
    background: none;
    border: none;
  }

  .ProseMirror[data-empty]::before {
    display: none;
  }
}